as.character(data$common_name) -> data$common_name
as.POSIXlt(data$DateTime, format="%Y-%m-%d %H:%M") -> data$DateTime
#WHY? as.POSIXlt(paste(data$DateTime), format="%Y-%m-%d %H:%M:%S") -> data$Date
data1 <- data %>%
#filter(site_name %in% rev_sites) ##if dataset not clean, also filter for revised only
filter(common_name!="dog")%>%
filter(common_name!="chipmunk")%>%
filter(common_name!="groundhog")%>%
filter(common_name!="skunk")%>%
filter(common_name!="oppossum")
data1 <- data1 %>% dplyr::arrange(DateTime)
start_time <- Sys.time()                           #toggle to measure runtime
combn(data1$common_name, 2, simplify=TRUE) -> m              #takes 4 min to run
end_time <- Sys.time()
end_time - start_time
m[1,] -> Species_1
m[2,] -> Species_2
start_time <- Sys.time()                           #toggle to measure runtime
combn(data1$site_name,2, simplify=TRUE) -> n                 #takes 5 min to run
end_time <- Sys.time()
end_time - start_time
n[1,] -> site_name
start_time <- Sys.time()                           #toggle to measure runtime
combn(as.character(data1$DateTime),2, simplify=TRUE) -> p    #takes 7 min to run
end_time <- Sys.time()
end_time - start_time
p[1,] -> a -> Date_1
p[2,] -> b -> Date_2
start_time <- Sys.time()                           #toggle to measure runtime
interval(a,b)->c                                             #takes 7 min to run
end_time <- Sys.time()
end_time - start_time
as.duration(c)->d
as.numeric(d)/3600-> e    #time interval in hours
e -> time_interval
start_time <- Sys.time()                           #toggle to measure runtime
output_dataset <- data.frame(Species_1, Species_2, site_name, #takes X min to run
Date_1, Date_2, time_interval)
end_time <- Sys.time()
end_time - start_time
saveRDS(output_dataset, "output_dataset.rds")
levels(as.factor((output_dataset$Species_1)))
rabbitfox <- output_dataset%>% subset( Species_1 =="rabbit") %>%
subset(Species_2 == "fox")
#view(rabbitfox)
deercoyote <- output_dataset%>% subset( Species_1 =="deer") %>%
subset(Species_2 == "coyote")
#view(deercoyote)
allprey_allpred <- output_dataset%>% subset( Species_1 =="rabbit" | Species_1 =="deer" | Species_1 =="squirrel" | Species_1 =="raccoon" | Species_1 =="cat") %>%
subset(Species_2 == "fox" | Species_2 =="coyote")
#view(allprey_allpred)
foxprey <- output_dataset%>% subset( Species_1 =="rabbit" | Species_1 =="squirrel") %>%
subset(Species_2 == "fox")
#view(foxprey)
coyprey <- output_dataset%>% subset( Species_1 =="rabbit" | Species_1 =="deer" | Species_1 =="squirrel" | Species_1 =="raccoon" | Species_1 =="cat") %>%
subset(Species_2 =="coyote")
#view(coyprey)
min_deercoyote <- filter(deercoyote, time_interval > 0)
min_deercoyote <- min_deercoyote[!duplicated(min_deercoyote$Date_1),]
min_rabbitfox <- filter(rabbitfox, time_interval > 0)
min_rabbitfox <- min_rabbitfox[!duplicated(min_rabbitfox$Date_1),]
min_all <- filter(allprey_allpred, time_interval > 0)
min_all <- min_all[!duplicated(min_all$Date_1),]
min_foxprey <- filter(foxprey, time_interval > 0)
min_foxprey <- min_foxprey[!duplicated(min_foxprey$Date_1),]
min_coyprey <- filter(coyprey, time_interval > 0)
min_coyprey <- min_coyprey[!duplicated(min_coyprey$Date_1),]
ggplot(data = min_coyprey,
mapping = aes(x = Species_1, y = time_interval)) +
geom_boxplot(aes(fill = Species_1), show.legend = TRUE) +
theme_bw() +
labs(x = "Species",
y = "Minimum-time between detection at same site (hour)",
title = "Minimum time-to-encounter, Prey then Coyote, 12 hrs") +
scale_y_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_boxplot_12.png")
ggplot(data = min_coyprey,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Coyote, 12 hrs") +
scale_x_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_density_12.png")
ggplot(data = min_foxprey,
mapping = aes(x = Species_1, y = time_interval)) +
geom_boxplot(aes(fill = Species_1), show.legend = TRUE) +
theme_bw() +
labs(x = "Species",
y = "Minimum-time between detection at same site (hour)",
title = "Minimum time-to-encounter, Prey then Fox, 12 hrs") +
scale_y_continuous(limits=c(0,12))
ggsave("waitingtime_foxprey_boxplot_12.png")
ggplot(data = min_foxprey,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Fox, 12 hrs") +
scale_x_continuous(limits=c(0,12))
ggsave("waitingtime_foxprey_density_12.png")
View(rabbitfox)
View(min_coyprey)
View(coyprey)
min_coyprey_pup <- filter(coyprey, time_interval > 0)
min_coyprey_pup <- filter(coyprey, month(Date_1) > June)
min_coyprey_pup <- min_coyprey[!duplicated(min_coyprey$Date_1),]
min_coyprey_pup <- filter(coyprey, time_interval > 0)
min_coyprey_pup <- filter(coyprey, month(Date_1) > May)
min_coyprey_pup <- filter(coyprey, month(Date_1) < September)
min_coyprey_pup <- min_coyprey[!duplicated(min_coyprey$Date_1),]
min_coyprey_pup <- filter(coyprey, time_interval > 0)
min_coyprey_pup <- filter(coyprey, month(Date_1) == 5:9)
min_coyprey_pup <- min_coyprey[!duplicated(min_coyprey_pup$Date_1),]
View(min_coyprey_pup)
View(min_coyprey)
View(min_coyprey_pup)
min_coyprey_pup <- filter(coyprey, time_interval > 0)
min_coyprey_pup <- filter(coyprey, month(Date_1) == 5:9)
min_coyprey_pup <- filter((coyprey, month(Date_1) == 5:9))
min_coyprey_pup <- filter(coyprey, month(Date_1) == 5)
min_coyprey_pup <- min_coyprey_pup %>%
filter(time_interval > 0) %>%
filter((month(Date_1) == 5:9))
min_coyprey_pup <- min_coyprey_pup %>%
filter(time_interval > 0) %>%
filter(month(Date_1) == 5:9)
View(min_coyprey_pup)
min_coyprey_pup <- coyprey %>%
filter(time_interval > 0) %>%
filter(month(Date_1) == 5:9)
min_coyprey_pup <- coyprey %>%
filter(time_interval > 0) %>%
filter(month(Date_1) == 5:8)
ggplot(data = min_coyprey_pup,
mapping = aes(x = Species_1, y = time_interval)) +
geom_boxplot(aes(fill = Species_1), show.legend = TRUE) +
theme_bw() +
labs(x = "Species",
y = "Minimum-time between detection at same site (hour)",
title = "*Breeding season - Minimum time-to-encounter, Prey then Coyote, 12 hrs") +
scale_y_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_boxplot_12.png")
ggplot(data = min_coyprey,
mapping = aes(x = Species_1, y = time_interval)) +
geom_boxplot(aes(fill = Species_1), show.legend = TRUE) +
theme_bw() +
labs(x = "Species",
y = "Minimum-time between detection at same site (hour)",
title = "Minimum time-to-encounter, Prey then Coyote, 12 hrs") +
scale_y_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_boxplot_12.png")
##pup season
ggplot(data = min_coyprey_pup,
mapping = aes(x = Species_1, y = time_interval)) +
geom_boxplot(aes(fill = Species_1), show.legend = TRUE) +
theme_bw() +
labs(x = "Species",
y = "Minimum-time between detection at same site (hour)",
title = "Minimum time-to-encounter, Prey then Coyote, 12 hrs - May to August") +
scale_y_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_boxplot_12_summer.png")
#pup season
ggplot(data = min_coyprey,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Coyote, 12 hrs - May to August") +
scale_x_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_density_12_summer.png")
ggplot(data = min_coyprey_pup,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Coyote, 12 hrs - May to August") +
scale_x_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_density_12_summer.png")
library(dplyr)
library(plyr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(ggpubr)
getwd()
setwd("~/Documents/GitHub/cameratrap_analysis")
##GENERATE COVARIATE dataframes for the model , make sure to readapt the site_names AND add human/dog presence
urlfile100="https://raw.githubusercontent.com/tgelmi-candusso/cameratrap_analysis/main/cov_100.csv"
urlfile500="https://raw.githubusercontent.com/tgelmi-candusso/cameratrap_analysis/main/cov_500.csv"
#urlfile1000="https://raw.githubusercontent.com/tgelmi-candusso/cameratrap_analysis/main/cov_1000.csv"
urlfile2000="https://raw.githubusercontent.com/tgelmi-candusso/cameratrap_analysis/main/cov_2000.csv"
urlfilehumans="https://raw.githubusercontent.com/tgelmi-candusso/cameratrap_analysis/main/human_dog_df.csv"
human_dog_df <- read.csv(urlfilehumans) %>%
select(-1) %>%
select(site_name, total_freq_humans ,total_freq_dogs )
b100 <- read.csv(urlfile100)%>%
mutate(site_name = gsub("_", "", site_name))%>%
mutate(site_name = gsub("TUW0", "TUW", site_name))
b100 <- left_join(b100, human_dog_df, by="site_name")
b500 <- read.csv(urlfile500)%>%
mutate(site_name = gsub("_", "", site_name))%>%
mutate(site_name = gsub("TUW0", "TUW", site_name))
b500 <- left_join(b500, human_dog_df, by="site_name")
b2000 <- read.csv(urlfile2000)%>%
mutate(site_name = gsub("_", "", site_name))%>%
mutate(site_name = gsub("TUW0", "TUW", site_name))
b2000 <- left_join(b2000, human_dog_df, by="site_name")
locale = locale(date_format = "%Y-%m-%d",
time_format = "%H:%M",
tz = "UTC")
#set date + species name format
as.character(data$common_name) -> data$common_name
as.POSIXlt(data$DateTime, format="%Y-%m-%d %H:%M") -> data$DateTime
#WHY? as.POSIXlt(paste(data$DateTime), format="%Y-%m-%d %H:%M:%S") -> data$Date
##filter out unrevised sites + species not of interest
data1 <- data %>%
filter(site_name %in% rev_sites)
filter(common_name!="dog")%>%
filter(common_name!="chipmunk")%>%
filter(common_name!="groundhog")%>%
filter(common_name!="skunk")%>%
filter(common_name!="oppossum")
#create a summary (why?)
aver <- data1 %>%
dplyr::group_by(common_name, site_name, .drop=FALSE) %>%
dplyr::summarize(n())
##sort following time
data1 <- data1 %>% dplyr::arrange(DateTime)
output_dataset <- readRDS("output_dataset.rds")
levels(as.factor((output_dataset$Species_1))) ###to see the Levels you have
###select species of interest
rabbitfox <- output_dataset%>% subset( Species_1 =="rabbit") %>%
subset(Species_2 == "fox")
#view(rabbitfox)
deercoyote <- output_dataset%>% subset( Species_1 =="deer") %>%
subset(Species_2 == "coyote")
#view(deercoyote)
allprey_allpred <- output_dataset%>% subset( Species_1 =="rabbit" | Species_1 =="deer" | Species_1 =="squirrel" | Species_1 =="raccoon" | Species_1 =="cat") %>%
subset(Species_2 == "fox" | Species_2 =="coyote")
#view(allprey_allpred)
foxprey <- output_dataset%>% subset( Species_1 =="rabbit" | Species_1 =="squirrel" | Species_1 =="raccoon" | Species_1 =="cat") %>%
subset(Species_2 == "fox")
#view(foxprey)
#w/o cat & raccoon
foxprey2 <- output_dataset%>% subset( Species_1 =="rabbit" | Species_1 =="squirrel") %>%
subset(Species_2 == "fox")
#view(foxprey2)
coyprey <- output_dataset%>% subset( Species_1 =="rabbit" | Species_1 =="deer" | Species_1 =="squirrel" | Species_1 =="raccoon" | Species_1 =="cat") %>%
subset(Species_2 =="coyote")
#view(coyprey)
output_dataset <- readRDS("output_dataset.rds")
output_dataset <- readRDS("output_dataset.rds")
levels(as.factor((output_dataset$Species_1))) ###to see the Levels you have
###select species of interest
rabbitfox <- output_dataset%>% subset( Species_1 =="rabbit") %>%
subset(Species_2 == "fox")
#view(rabbitfox)
deercoyote <- output_dataset%>% subset( Species_1 =="deer") %>%
subset(Species_2 == "coyote")
#view(deercoyote)
allprey_allpred <- output_dataset%>% subset( Species_1 =="rabbit" | Species_1 =="deer" | Species_1 =="squirrel" | Species_1 =="raccoon" | Species_1 =="cat") %>%
subset(Species_2 == "fox" | Species_2 =="coyote")
#view(allprey_allpred)
foxprey <- output_dataset%>% subset( Species_1 =="rabbit" | Species_1 =="squirrel" | Species_1 =="raccoon" | Species_1 =="cat") %>%
subset(Species_2 == "fox")
#view(foxprey)
#w/o cat & raccoon
foxprey2 <- output_dataset%>% subset( Species_1 =="rabbit" | Species_1 =="squirrel") %>%
subset(Species_2 == "fox")
#view(foxprey2)
coyprey <- output_dataset%>% subset( Species_1 =="rabbit" | Species_1 =="deer" | Species_1 =="squirrel" | Species_1 =="raccoon" | Species_1 =="cat") %>%
subset(Species_2 =="coyote")
#view(coyprey)
#In the real dataset it will be something more like this of Course.
#output_dataset%>% subset(Species_1 == "Dog" | Species_1 =="Coyote" | Species_1 =="Fox") %>%
#subset(Species_2 == "Dog" | Species_2 =="Coyote" | Species_2 =="Fox")
#plot predator-after-prey minimum waiting times
min_deercoyote <- filter(deercoyote, time_interval > 0)
min_deercoyote <- min_deercoyote[!duplicated(min_deercoyote$Date_1),]
min_rabbitfox <- filter(rabbitfox, time_interval > 0)
min_rabbitfox <- min_rabbitfox[!duplicated(min_rabbitfox$Date_1),]
min_all <- filter(allprey_allpred, time_interval > 0)
min_all <- min_all[!duplicated(min_all$Date_1),]
min_foxprey <- filter(foxprey2, time_interval > 0)             #using foxprey2 (no cat or raccoon)
min_foxprey <- min_foxprey[!duplicated(min_foxprey$Date_1),]
min_coyprey <- filter(coyprey, time_interval > 0)
min_coyprey <- min_coyprey[!duplicated(min_coyprey$Date_1),]
min_coyprey24 <- filter(coyprey, time_interval > 0)
min_coyprey24 <- filter(coyprey, time_interval < 24)
min_coyprey24 <- min_coyprey24[!duplicated(min_coyprey24$Date_1),]
min_coyprey12<- filter(coyprey, time_interval > 0)
min_coyprey12 <- filter(coyprey, time_interval < 12)
min_coyprey12 <- min_coyprey12[!duplicated(min_coyprey12$Date_1),]
min_rabbitfox12 <- filter(rabbitfox, time_interval > 0)
min_rabbitfox12 <- filter(rabbitfox, time_interval < 12)
min_rabbitfox12 <- min_rabbitfox12[!duplicated(min_rabbitfox12$Date_1),]
View(min_coyprey)
min_coyprey_pup <- filter(coyprey, time_interval > 0)
min_coyprey_pup <- filter(month(min_coyprey_pup$Date_1 %in% 5:8))
min_coyprey_pup <- min_coyprey_pup[!duplicated(min_coyprey_pup$Date_1),]
min_coyprey_pup <- filter(coyprey, time_interval > 0)
min_coyprey_pup <- filter(month(min_coyprey_pup$Date_1 == 5:8))
min_coyprey_pup <- filter(coyprey, time_interval > 0)
View(min_coyprey_pup)
min_coyprey_pup <- filter(month(min_coyprey_pup$Date_1) == 5:8)
View(min_coyprey_pup)
min_coyprey_pup <- filter(coyprey, time_interval > 0)
min_coyprey_pup <- filter((month(min_coyprey_pup$Date_1)==5:8))
View(min_coyprey_pup)
min_coyprey_pup <- filter(min_coyprey, month(Date_1) == 5:8)
ggplot(data = min_coyprey,
mapping = aes(x = Species_1, y = time_interval)) +
geom_boxplot(aes(fill = Species_1), show.legend = TRUE) +
theme_bw() +
labs(x = "Species",
y = "Minimum-time between detection at same site (hour)",
title = "Minimum time-to-encounter, Prey then Coyote, 24 hrs") +
scale_y_continuous(limits=c(0,24))
ggsave("waitingtime_coyprey_boxplot_24.png")
ggplot(data = min_coyprey,
mapping = aes(x = Species_1, y = time_interval)) +
geom_boxplot(aes(fill = Species_1), show.legend = TRUE) +
theme_bw() +
labs(x = "Species",
y = "Minimum-time between detection at same site (hour)",
title = "Minimum time-to-encounter, Prey then Coyote, 12 hrs") +
scale_y_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_boxplot_12.png")
#DENSITY
ggplot(data = min_coyprey,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Coyote, 24 hrs") +
scale_x_continuous(limits=c(0,24))
ggsave("waitingtime_coyprey_density_24.png")
ggplot(data = min_coyprey,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Coyote, 12 hrs") +
scale_x_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_density_12.png")
#pup season
ggplot(data = min_coyprey_pup,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Coyote, 12 hrs - May to August") +
scale_x_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_density_12_summer.png")
##FOX VS ALL PREY
#BOXPLOT
ggplot(data = min_foxprey,
mapping = aes(x = Species_1, y = time_interval)) +
geom_boxplot(aes(fill = Species_1), show.legend = TRUE) +
theme_bw() +
labs(x = "Species",
y = "Minimum-time between detection at same site (hour)",
title = "Minimum time-to-encounter, Prey then Fox, 24 hrs") +
scale_y_continuous(limits=c(0,24))
ggsave("waitingtime_foxprey_boxplot_24.png")
ggplot(data = min_foxprey,
mapping = aes(x = Species_1, y = time_interval)) +
geom_boxplot(aes(fill = Species_1), show.legend = TRUE) +
theme_bw() +
labs(x = "Species",
y = "Minimum-time between detection at same site (hour)",
title = "Minimum time-to-encounter, Prey then Fox, 12 hrs") +
scale_y_continuous(limits=c(0,12))
ggsave("waitingtime_foxprey_boxplot_12.png")
#DENSITY
ggplot(data = min_foxprey,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Fox, 24 hrs") +
scale_x_continuous(limits=c(0,24))
ggsave("waitingtime_foxprey_density_24.png")
ggplot(data = min_foxprey,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Fox, 12 hrs") +
scale_x_continuous(limits=c(0,12))
ggsave("waitingtime_foxprey_density_12.png")
#BOXPLOT
ggplot(data = min_coyprey,
mapping = aes(x = Species_1, y = time_interval)) +
geom_boxplot(aes(fill = Species_1), show.legend = TRUE) +
theme_bw() +
labs(x = "Species",
y = "Minimum-time between detection at same site (hour)",
title = "Minimum time-to-encounter, Prey then Coyote, 24 hrs") +
scale_y_continuous(limits=c(0,24))
ggsave("waitingtime_coyprey_boxplot_24.png")
ggplot(data = min_coyprey,
mapping = aes(x = Species_1, y = time_interval)) +
geom_boxplot(aes(fill = Species_1), show.legend = TRUE) +
theme_bw() +
labs(x = "Species",
y = "Minimum-time between detection at same site (hour)",
title = "Minimum time-to-encounter, Prey then Coyote, 12 hrs") +
scale_y_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_boxplot_12.png")
#DENSITY
ggplot(data = min_coyprey,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Coyote, 24 hrs") +
scale_x_continuous(limits=c(0,24))
ggsave("waitingtime_coyprey_density_24.png")
ggplot(data = min_coyprey,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Coyote, 12 hrs") +
scale_x_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_density_12.png")
#pup season
ggplot(data = min_coyprey_pup,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Coyote, 12 hrs - May to August") +
scale_x_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_density_12_summer.png")
##FOX VS ALL PREY
#BOXPLOT
ggplot(data = min_foxprey,
mapping = aes(x = Species_1, y = time_interval)) +
geom_boxplot(aes(fill = Species_1), show.legend = TRUE) +
theme_bw() +
labs(x = "Species",
y = "Minimum-time between detection at same site (hour)",
title = "Minimum time-to-encounter, Prey then Fox, 24 hrs") +
scale_y_continuous(limits=c(0,24))
ggsave("waitingtime_foxprey_boxplot_24.png")
ggplot(data = min_foxprey,
mapping = aes(x = Species_1, y = time_interval)) +
geom_boxplot(aes(fill = Species_1), show.legend = TRUE) +
theme_bw() +
labs(x = "Species",
y = "Minimum-time between detection at same site (hour)",
title = "Minimum time-to-encounter, Prey then Fox, 12 hrs") +
scale_y_continuous(limits=c(0,12))
ggsave("waitingtime_foxprey_boxplot_12.png")
#DENSITY
ggplot(data = min_foxprey,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Fox, 24 hrs") +
scale_x_continuous(limits=c(0,24))
ggsave("waitingtime_foxprey_density_24.png")
ggplot(data = min_foxprey,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Fox, 12 hrs") +
scale_x_continuous(limits=c(0,12))
ggsave("waitingtime_foxprey_density_12.png")
min_coyprey_pup2 <- filter(coyprey, time_interval > 0)
min_coyprey_pup2 <- filter(min_coyprey_pup2, month(Date_1) == 5:8)
min_coyprey_pup2 <- min_coyprey_pup2[!duplicated(min_coyprey_pup2$Date_1),]
View(min_coyprey_pup2)
View(min_coyprey)
ggplot(data = min_coyprey_pup2,
mapping = aes(x = Species_1, y = time_interval)) +
geom_boxplot(aes(fill = Species_1), show.legend = TRUE) +
theme_bw() +
labs(x = "Species",
y = "Minimum-time between detection at same site (hour)",
title = "Minimum time-to-encounter, Prey then Coyote, 12 hrs - May to August") +
scale_y_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_boxplot_12_summer.png")
#Density
ggplot(data = min_coyprey_pup2,
mapping = aes(x = time_interval, color = Species_1)) +
geom_density()+
theme_bw() +
labs(x = "Minimum-time between detection at same site (hour)",
y = "Density",
title = "Minimum time-to-encounter, Prey then Coyote, 12 hrs - May to August") +
scale_x_continuous(limits=c(0,12))
ggsave("waitingtime_coyprey_density_12_summer.png")
