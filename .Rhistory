siteCovs = cov100,
obsCovs = det_list)
cd500 <- unmarkedFrameOccuMulti(y = y_list,
siteCovs = cov500,
obsCovs = det_list)
cd2000 <- unmarkedFrameOccuMulti(y = y_list,
siteCovs = cov2000,
obsCovs = det_list)
mdata <- cd100              ##toggle buffer size here
#first selection
fit_null <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~1'),
maxOrder = 2,
data = mdata)
fit_veg <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~veg_complexity'),
maxOrder = 2,
data = mdata)
fit_cor <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~corridor'),
maxOrder = 2,
data = mdata)
fit_LFT <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~LFT_dist'),
maxOrder = 2,
data = mdata)
fit_H2O <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~H2O_dist'),
maxOrder = 2,
data = mdata)
fit_WV <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WV_dist'),
maxOrder = 2,
data = mdata)
fit_MV <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~MV_dist'),
maxOrder = 2,
data = mdata)
fit_WVF <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WVF_dist'),
maxOrder = 2,
data = mdata)
fit_WVO <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WVO_dist'),
maxOrder = 2,
data = mdata)
fit_built <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~built'),
maxOrder = 2,
data = mdata)
fit_DEM_median <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~DEM_median'),
maxOrder = 2,
data = mdata)
fit_DEM_mean <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~DEM_mean'),
maxOrder = 2,
data = mdata)
fit_NDVI_median <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~NDVI_median'),
maxOrder = 2,
data = mdata)
fit_NDVI_mean <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~NDVI_mean'),
maxOrder = 2,
data = mdata)
fit_POP_median <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~POP_median'),
maxOrder = 2,
data = mdata)
fit_POP_mean <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~POP_mean'),
maxOrder = 2,
data = mdata)
fit_WVO_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WVO_PA'),
maxOrder = 2,
data = mdata)
fit_WVF_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WVF_PA'),
maxOrder = 2,
data = mdata)
fit_MV_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~MV_PA'),
maxOrder = 2,
data = mdata)
fit_FD_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~Fdec_PA'),
maxOrder = 2,
data = mdata)
fit_FM_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~Fmix_PA'),
maxOrder = 2,
data = mdata)
fit_FC_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~Fcon_PA'),
maxOrder = 2,
data = mdata)
fit_hum <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~total_freq_humans'),
maxOrder = 2,
data = mdata)
fit_dog <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~total_freq_dogs'),
maxOrder = 2,
data = mdata)
fit <- fitList(fit_null, fit_cor, fit_veg, fit_LFT, fit_H2O, fit_WV, fit_MV, fit_WVF,
fit_WVO, fit_built, fit_DEM_median, fit_DEM_mean, fit_NDVI_median,
fit_NDVI_mean, fit_POP_median, fit_POP_mean, fit_WVO_PA, fit_WVF_PA,
fit_MV_PA, fit_FC_PA, fit_FM_PA, fit_FD_PA, fit_hum, fit_dog)
modSel(fit)
sink("modSel100.txt")
print(modSel(fit))
sink()
mdata <- cd500              ##toggle buffer size here
#first selection
fit_null <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~1'),
maxOrder = 2,
data = mdata)
fit_veg <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~veg_complexity'),
maxOrder = 2,
data = mdata)
fit_cor <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~corridor'),
maxOrder = 2,
data = mdata)
fit_LFT <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~LFT_dist'),
maxOrder = 2,
data = mdata)
fit_H2O <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~H2O_dist'),
maxOrder = 2,
data = mdata)
fit_WV <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WV_dist'),
maxOrder = 2,
data = mdata)
fit_MV <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~MV_dist'),
maxOrder = 2,
data = mdata)
fit_WVF <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WVF_dist'),
maxOrder = 2,
data = mdata)
fit_WVO <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WVO_dist'),
maxOrder = 2,
data = mdata)
fit_built <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~built'),
maxOrder = 2,
data = mdata)
fit_DEM_median <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~DEM_median'),
maxOrder = 2,
data = mdata)
fit_DEM_mean <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~DEM_mean'),
maxOrder = 2,
data = mdata)
fit_NDVI_median <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~NDVI_median'),
maxOrder = 2,
data = mdata)
fit_NDVI_mean <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~NDVI_mean'),
maxOrder = 2,
data = mdata)
fit_POP_median <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~POP_median'),
maxOrder = 2,
data = mdata)
fit_POP_mean <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~POP_mean'),
maxOrder = 2,
data = mdata)
fit_WVO_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WVO_PA'),
maxOrder = 2,
data = mdata)
fit_WVF_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WVF_PA'),
maxOrder = 2,
data = mdata)
fit_MV_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~MV_PA'),
maxOrder = 2,
data = mdata)
fit_FD_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~Fdec_PA'),
maxOrder = 2,
data = mdata)
fit_FM_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~Fmix_PA'),
maxOrder = 2,
data = mdata)
fit_FC_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~Fcon_PA'),
maxOrder = 2,
data = mdata)
fit_hum <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~total_freq_humans'),
maxOrder = 2,
data = mdata)
fit_dog <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~total_freq_dogs'),
maxOrder = 2,
data = mdata)
fit <- fitList(fit_null, fit_cor, fit_veg, fit_LFT, fit_H2O, fit_WV, fit_MV, fit_WVF,
fit_WVO, fit_built, fit_DEM_median, fit_DEM_mean, fit_NDVI_median,
fit_NDVI_mean, fit_POP_median, fit_POP_mean, fit_WVO_PA, fit_WVF_PA,
fit_MV_PA, fit_FC_PA, fit_FM_PA, fit_FD_PA, fit_hum, fit_dog)
modSel(fit)
sink("modSel500.txt")
print(modSel(fit))
sink()
mdata <- cd2000              ##toggle buffer size here
#first selection
fit_null <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~1'),
maxOrder = 2,
data = mdata)
fit_veg <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~veg_complexity'),
maxOrder = 2,
data = mdata)
fit_cor <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~corridor'),
maxOrder = 2,
data = mdata)
fit_LFT <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~LFT_dist'),
maxOrder = 2,
data = mdata)
fit_H2O <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~H2O_dist'),
maxOrder = 2,
data = mdata)
fit_WV <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WV_dist'),
maxOrder = 2,
data = mdata)
fit_MV <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~MV_dist'),
maxOrder = 2,
data = mdata)
fit_WVF <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WVF_dist'),
maxOrder = 2,
data = mdata)
fit_WVO <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WVO_dist'),
maxOrder = 2,
data = mdata)
fit_built <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~built'),
maxOrder = 2,
data = mdata)
fit_DEM_median <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~DEM_median'),
maxOrder = 2,
data = mdata)
fit_DEM_mean <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~DEM_mean'),
maxOrder = 2,
data = mdata)
fit_NDVI_median <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~NDVI_median'),
maxOrder = 2,
data = mdata)
fit_NDVI_mean <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~NDVI_mean'),
maxOrder = 2,
data = mdata)
fit_POP_median <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~POP_median'),
maxOrder = 2,
data = mdata)
fit_POP_mean <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~POP_mean'),
maxOrder = 2,
data = mdata)
fit_WVO_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WVO_PA'),
maxOrder = 2,
data = mdata)
fit_WVF_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~WVF_PA'),
maxOrder = 2,
data = mdata)
fit_MV_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~MV_PA'),
maxOrder = 2,
data = mdata)
fit_FD_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~Fdec_PA'),
maxOrder = 2,
data = mdata)
fit_FM_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~Fmix_PA'),
maxOrder = 2,
data = mdata)
fit_FC_PA <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~Fcon_PA'),
maxOrder = 2,
data = mdata)
fit_hum <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~total_freq_humans'),
maxOrder = 2,
data = mdata)
fit_dog <- occuMulti(detformulas = c('~season', '~season'),
stateformulas = c('~1', '~1', '~total_freq_dogs'),
maxOrder = 2,
data = mdata)
fit <- fitList(fit_null, fit_cor, fit_veg, fit_LFT, fit_H2O, fit_WV, fit_MV, fit_WVF,
fit_WVO, fit_built, fit_DEM_median, fit_DEM_mean, fit_NDVI_median,
fit_NDVI_mean, fit_POP_median, fit_POP_mean, fit_WVO_PA, fit_WVF_PA,
fit_MV_PA, fit_FC_PA, fit_FM_PA, fit_FD_PA, fit_hum, fit_dog)
modSel(fit)
sink("modSel2000.txt")
print(modSel(fit))
sink()
sink("modSel_cdeer_2000.txt")
print(modSel(fit))
sink()
library(dplyr)
library(lubridate)
library(plyr)
library(tidyverse)
library(rstan)
library(unmarked)
library(ggplot2)
getwd()
setwd("~/Documents/GitHub/cameratrap_analysis")
data<-read_csv("TimelapseDatabase_FULL_14072022 (1).csv")%>%
filter(DeleteFlag == FALSE)%>%
filter(revised==TRUE)
data<-data%>%
dplyr::rename(site_name_original = RelativePath, common_name=Species)%>%
mutate(DateTime = as.POSIXct(DateTime, tz = "America/New_York")) %>%
mutate(DateTime = force_tz(DateTime, "America/New_York", roll = FALSE))%>%
mutate(site_name_original = as.character(site_name_original))%>%
mutate(site_name_clean = gsub("TUWCPC_", "CPC", site_name_original))%>%
mutate(site_name_clean = gsub("_", "", site_name_clean))%>%
mutate(site_name_clean = gsub("TUW0", "TUW", site_name_clean))%>%
separate(site_name_clean, c("site_name","checkup"), fill="right")%>%
dplyr::arrange(site_name, common_name, DateTime)%>%
dplyr::mutate(delta.time = DateTime - lag(DateTime),
delta.time_secs = as.numeric(delta.time, units = 'secs')) %>%
dplyr::filter(delta.time_secs > 20)%>% #key line to decide independent events, here 20 seconds, but not important if doing presence/absence
dplyr::mutate(season = factor(month(DateTime)))%>%
dplyr::mutate(week = factor(week(DateTime)))%>%
dplyr::mutate(site_name = factor(site_name))%>%
dplyr::mutate(date = factor(date(DateTime)))%>%
dplyr::mutate(common_name = factor(common_name))
library(dplyr)
library(lubridate)
library(plyr)
library(tidyverse)
library(rstan)
library(unmarked)
library(ggplot2)
getwd()
setwd("~/Documents/GitHub/cameratrap_analysis")
data<-read_csv("TimelapseDatabase_FULL_14072022 (1).csv")%>%
filter(DeleteFlag == FALSE)%>%
filter(revised==TRUE)
#write.csv(data, "TimelapseDatabase_FULL_04072022_nodeletes_onlyrevised.csv")##not getting smaller
###load raw timelapse export csv ####
data<-data%>%
dplyr::rename(site_name_original = RelativePath, common_name=Species)%>%
mutate(DateTime = as.POSIXct(DateTime, tz = "America/New_York")) %>%
mutate(DateTime = force_tz(DateTime, "America/New_York", roll = FALSE))%>%
mutate(site_name_original = as.character(site_name_original))%>%
mutate(site_name_clean = gsub("TUWCPC_", "CPC", site_name_original))%>%
mutate(site_name_clean = gsub("_", "", site_name_clean))%>%
mutate(site_name_clean = gsub("TUW0", "TUW", site_name_clean))%>%
separate(site_name_clean, c("site_name","checkup"), fill="right")%>%
dplyr::arrange(site_name, common_name, DateTime)%>%
dplyr::mutate(delta.time = DateTime - lag(DateTime),
delta.time_secs = as.numeric(delta.time, units = 'secs')) %>%
dplyr::filter(delta.time_secs > 20)%>% #key line to decide independent events, here 20 seconds, but not important if doing presence/absence
dplyr::mutate(season = factor(month(DateTime)))%>%
dplyr::mutate(week = factor(week(DateTime)))%>%
dplyr::mutate(site_name = factor(site_name))%>%
dplyr::mutate(date = factor(date(DateTime)))%>%
dplyr::mutate(common_name = factor(common_name))
#View(data)
##add deployment periods####
dp<- read_csv("deployment_period.csv")%>%
mutate(start = as.POSIXct(deployment_start, format = "%m/%d/%Y %H:%M"))%>%
mutate(end = as.POSIXct(deployment_end, format = "%m/%d/%Y %H:%M")) %>%
select(site_name, start, end)%>%
mutate(site_name = gsub("_", "", site_name))%>%
mutate(site_name = gsub("TUW0", "TUW", site_name))
data<- left_join(data, dp, by="site_name")
#####checking deployment period is correct (for record)####
####
# v <- data %>%
#   mutate(within_deployment_period = ifelse(as.Date(DateTime)>=as.Date(start)&as.Date(DateTime)<=as.Date(end),1,0))%>%
#   select(site_name, common_name, DateTime, start, end, within_deployment_period)
# v.0 <- v%>% filter(within_deployment_period==0)
# factor(v.0$site_name) ##CPC5, TUW40, TUW41 have pictures beyond deployment period (must be the checkup, there were subfolders for these sites)
##filter cameras that have inconsistent data ####
data <- data %>%
dplyr::filter(site_name != "TUW40")%>%
dplyr::filter(site_name != "TUW41")%>%
dplyr::filter(site_name != "CPC5") %>%
dplyr::filter(site_name != "TUW20")
d42 <- data %>% filter(site_name == "TUW42") %>%
filter(!(year(DateTime)==2017))
d42_no2020 <- d42%>%  filter(!(year(DateTime)==2020))
d42_fix <- d42 %>%
filter((year(DateTime)==2020))%>%
mutate(DateTime = DateTime %m+% years(1))
d42_2020_fix <- rbind(d42_fix, d42_no2020)
d_no42 <- data %>% filter(site_name != "TUW42")
data <- rbind(d_no42, d42_2020_fix) #the hole of data stil existing in TUW42 is not due to not deployment nor malfunctioning, rather recovered photos for which I recovered only those with animals
data<-data %>%
mutate(site_name = ifelse(site_name_original == "TUW31" & (DateTime>= "2021-07-01 17:28:26" & DateTime<= "2021-08-29 11:23:51"), "TUW32", site_name)) %>%
mutate(site_name = ifelse(site_name_original == "TUW31" & (DateTime>= "2021-08-29 13:02:26" & DateTime<= "2021-08-29 13:03:42"), "TUW32", site_name)) %>%
mutate(site_name = ifelse(site_name_original == "TUW32" & (DateTime>= "2021-07-01 17:55:22" & DateTime<= "2021-08-29 11:57:01"), "TUW31", site_name))
Sca <- c("TUW16",
"TUW17",
"TUW18",
"TUW19",
"TUW20",
"TUW21",
"TUW22",
"TUW23",
"TUW24",
"TUW25",
"TUW26",
"TUW27",
"TUW28",
"TUW29",
"TUW29b",
"TUW39",
"TUW42",
"TUW40",
"TUW41",
"TUW42")
Hum <- c("TUW10",
"TUW11",
"TUW12",
"TUW1",
"TUW2",
"TUW3",
"TUW4",
"TUW5",
"TUW6",
"TUW7",
"TUW8",
"TUW9",
"TUW9b")
Don <- c("TUW13",
"TUW14",
"TUW15",
"TUW30",
"TUW31",
"TUW32",
"TUW33",
"TUW33b",
"TUW33c",
"TUW34",
"TUW35",
"TUW35b",
"TUW36",
"TUW36b",
"TUW37",
"TUW37b",
"TUW38",
"TUW38b")
CPC <- c("CPC1","CPC2", "CPC3", "CPC4", "CPC5", "CPC6")
rev_sites <- c("TUW17",
#"TUW18",
"TUW19",
"TUW21",
"TUW23",
"TUW24",
"TUW25",
"TUW26",
"TUW27",
"TUW28",
"TUW29",
"TUW29b",
"TUW39",
"TUW42",
"TUW36",
"TUW38",
"TUW37b",
"TUW35a",
"TUW37",
#"TUW36b",
#"TUW33b",
#"TUW34",
"TUW38b",
#"TUW35b",
#"TUW32",
"TUW31",
#"TUW33",
"TUW2")
#"TUW14",
#"TUW1")
d <- data %>%
filter(site_name %in% rev_sites)
View(d)
write.csv(d, "data_wt_revised.csv")
